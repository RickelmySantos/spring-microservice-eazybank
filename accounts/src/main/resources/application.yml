server:
  port: 8080
  servlet:
    context-path: /api
spring:
  application:
    name: accounts
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: ${SPRING_DATASOURCE_DRIVER-CLASS-NAME}
  jpa:
    show-sql: true
  sql:
    init:
      mode: never
  hibernate:
    format_sql: false
    jakarta.persistence.schema-generation.scripts:
      action: drop-and-create
      create-source: metadata
      create-target: target/create.sql
      drop-source: metadata
      drop-target: target/drop.sql
  config:
    import: "optional:configserver:http://localhost:8871/"
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

build:
  version: 1.0

accounts:
  message: "Bem-vindo ao microservi√ßo de contas"
  contactDetails:
    name: "RSDesenvolvimento"
    email: "rsdesenvolvimento@gmail.com"
  onCallSupport:
    - (99) 99999-9999
management:
  endpoints:
    web:
      exposure:
        include: "*"

---
spring:
  config:
    activate:
      on-profile: prod
build:
  version: "1.0"

accounts:
  message: "Bem vindos ao EazyBank accounts prod APIs "
  contactDetails:
    name: "RSDensenvolvimento"
    email: "rsdesenvolvimento@gmail.com"
  onCallSupport:
    - (999) 9999-9999

---
spring:
  config:
    activate:
      on-profile: qa
build:
  version: "2.0"

accounts:
  message: "Bem vindos ao EazyBank accounts qa APIs "
  contactDetails:
    name: "RSDensenvolvimento"
    email: "rsdesenvolvimento@gmail.com"
  onCallSupport:
    - (999) 9999-9999
