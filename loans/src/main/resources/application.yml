server:
  port: 8090
  servlet:
    context-path: /api
spring:
  application:
    name: loans
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: ${SPRING_DATASOURCE_DRIVER-CLASS-NAME}
  jpa:
    show-sql: true
    hibernate:
      format_sql: false
      jakarta.persistence.schema-generation.scripts:
        action: drop-and-create
        create-source: metadata
        create-target: target/create.sql
        drop-source: metadata
        drop-target: target/drop.sql

  config:
    import: "optional:configserver:http://localhost:8071/"

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/api/eureka/
  # rabbitmq:
  #   host: localhost
  #   port: 5672
  #   username: guest
  #   password: guest
management:
  endpoints:
    web:
      exposure:
        include: "*"
build:
  version: "1.0"

loans:
  message: "Bem vindos ao EazyBank loans prod APIs "
  contactDetails:
    name: "RSDensenvolvimento"
    email: "rsdesenvolvimento@gmail.com"
  onCallSupport:
    - (999) 9999-9999
---
spring:
  config:
    activate:
      on-profile: prod
build:
  version: "1.0"

loans:
  message: "Bem vindos ao EazyBank loans prod APIs "
  contactDetails:
    name: "RSDensenvolvimento"
    email: "rsdesenvolvimento@gmail.com"
  onCallSupport:
    - (999) 9999-9999
---
spring:
  config:
    activate:
      on-profile: qa
build:
  version: "2.0"

loans:
  message: "Bem vindos ao EazyBank loans qa APIs "
  contactDetails:
    name: "RSDensenvolvimento"
    email: "rsdesenvolvimento@gmail.com"
  onCallSupport:
    - (999) 9999-9999
