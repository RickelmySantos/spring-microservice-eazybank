server:
  port: 8080
  servlet:
    context-path: /api
spring:
  application:
    name: accounts
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/accounts}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}
    driver-class-name: ${SPRING_DATASOURCE_DRIVER-CLASS-NAME:org.postgresql.Driver}

  sql:
    init:
      mode: never
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
  # rabbitmq:
  #   host: localhost
  #   port: 5672
  #   username: guest
  #   password: guest
eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/api/eureka/}

build:
  version: 1.0

accounts:
  message: "Bem-vindo ao microservi√ßo de contas"
  contactDetails:
    name: "RSDesenvolvimento"
    email: "rsdesenvolvimento@gmail.com"
  onCallSupport:
  - (99) 99999-9999
management:
  endpoints:
    web:
      exposure:
        include: "*"
info:
  app:
    name: "Accounts Service"
    description: "Gerencia contas de clientes"
    version: "1.0.0"
  developer:
    name: "RSDesenvolvimento"
    email: "rsdesenvolvimento@gmail.com"
---
spring:
  config:
    activate:
      on-profile: prod
build:
  version: "1.0"

accounts:
  message: "Bem vindos ao EazyBank accounts prod APIs "
  contactDetails:
    name: "RSDensenvolvimento"
    email: "rsdesenvolvimento@gmail.com"
  onCallSupport:
  - (999) 9999-9999
---
spring:
  config:
    activate:
      on-profile: qa
build:
  version: "2.0"

accounts:
  message: "Bem vindos ao EazyBank accounts qa APIs "
  contactDetails:
    name: "RSDensenvolvimento"
    email: "rsdesenvolvimento@gmail.com"
  onCallSupport:
  - (999) 9999-9999
